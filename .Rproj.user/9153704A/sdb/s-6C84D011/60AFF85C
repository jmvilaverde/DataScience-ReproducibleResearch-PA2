{
    "contents" : "#Set data path\ndataPath <- \"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2\"\nfileName <- \"StormData.csv.bz2\"\n#Download the file\ndownload.file(url = dataPath, destfile = fileName, method = \"auto\")\n\n#Extract bz2 file to a dataframe\ndataInitial <- read.csv(bzfile(fileName))\n\n\nlibrary(dplyr)\n\nlibrary(lubridate)\n\n#Transform date\ndataInitial$date <- as.Date(dataInitial$BGN_DATE, format = \"%m/%d/%Y\")\nhead(dataInitial)\ndataInitial$year <- year(dataInitial$date)\nsummary(dataInitial$year>=1996)\nsum(!dataInitial$year>=1996)/nrow(dataInitial)\n\n#Filter by year\ndataYearProcessed <- dataInitial[dataInitial$year>=1996,]\n\ndataStatesProcessed <- dataYearProcessed[dataYearProcessed$STATE %in% state.abb,]\n\nsummary(dataYearProcessed$STATE %in% state.abb)\npercentDataRemStates <- sum(!dataYearProcessed$STATE %in% state.abb)/nrow(dataYearProcessed)\n\nsummary(dataStatesProcessed$PROPDMGEXP)\n\ndataStatesProcessed %>% \n        select(EVTYPE, FATALITIES, INJURIES, PROPDMG, PROPDMGEXP, CROPDMG, CROPDMGEXP) -> dataPreprocess\n\n#Remove Summary from event type\ndataPreprocessed <- dataPreprocessed[!grepl(pattern = \"Summary\", x=dataPreprocessed$EVTYPE),]\n\n#Create Property damage total\n#Type of exponents -> Billion, Million, K thousand\nsummary(dataPreprocessed)\ndataPreprocessed %>%\n        mutate(CombinedHealthDamage = FATALITIES + INJURIES) -> dataPreprocessed \n\ndataPreprocessed %>%\n        mutate(multiPROPDM = ifelse(PROPDMGEXP == 'B', 10^9, \n                                    ifelse(PROPDMGEXP == 'M', 10^6, \n                                           ifelse(PROPDMGEXP == 'K', 10^3, \n                                                  ifelse(PROPDMGEXP == 'H', 100, 1))))) %>%\n        mutate(totalPROPDMG = as.numeric(multiPROPDM) * as.numeric(PROPDMG)) -> dataPreprocessed\n\n\ndataAgregateFatalities <- with(dataPreprocess, aggregate(FATALITIES, list(EVTYPE), sum))\ndataAgregateFatalities <- rename(dataAgregateFatalities, EVTYPE = Group.1, FATALITIES = x)\ndAFatalitiesTop20 <-arrange(dataAgregateFatalities,desc(FATALITIES))[1:20,]\n\ndataAgregateINJURIES <- with(dataPreprocess, aggregate(INJURIES, list(EVTYPE), sum))\ndataAgregateINJURIES <- rename(dataAgregateINJURIES, EVTYPE = Group.1, INJURIES = x)\ndAINJURIESTop20 <- arrange(dataAgregateINJURIES, desc(INJURIES))[1:20,]\n\ndataAgregateCombined <- with(dataPreprocessed, aggregate(CombinedHealthDamage, list(EVTYPE), sum))\ndataAgregateCombined <- rename(dataAgregateCombined, EVTYPE = Group.1, CombinedHealthDamage = x)\ndACOMBINEDTop20 <- arrange(dataAgregateCombined, desc(CombinedHealthDamage))[1:20,]\n\n#Change the factor order\ndAFatalitiesTop20$EVTYPE <- factor(dAFatalitiesTop20$EVTYPE, levels = dAFatalitiesTop20$EVTYPE[order(dAFatalitiesTop20$FATALITIES)])\ndAINJURIESTop20$EVTYPE <- factor(dAINJURIESTop20$EVTYPE, levels = dAINJURIESTop20$EVTYPE[order(dAINJURIESTop20$INJURIES)])\ndACOMBINEDTop20$EVTYPE <- factor(dACOMBINEDTop20$EVTYPE, levels = dACOMBINEDTop20$EVTYPE[order(dACOMBINEDTop20$CombinedHealthDamage)])\n\nlibrary(ggplot2)\n\ngf <- ggplot(data=dAFatalitiesTop20, aes(x=EVTYPE, y=FATALITIES , fill=EVTYPE)) +\n        geom_bar(stat=\"identity\", show_guide = FALSE) + \n        coord_flip() + geom_text(aes(label=FATALITIES), vjust=0)\n\ngi <- ggplot(data=dAINJURIESTop20, aes(x=EVTYPE, y=INJURIES , fill=EVTYPE)) +\n        geom_bar(stat=\"identity\", show_guide = FALSE) + \n        coord_flip() + geom_text(aes(label=INJURIES), vjust=0)\n\ngc <- ggplot(data=dACOMBINEDTop20, aes(x=EVTYPE, y=CombinedHealthDamage , fill=EVTYPE))\ngc <- gc + geom_bar(stat=\"identity\", show_guide = FALSE)\ngc <- gc + coord_flip() + geom_text(aes(label=CombinedHealthDamage), vjust=0)\n\nrequire(gridExtra)\ngrid.arrange(gf, gi, gc, nrow=3)\n\n\ndataPreprocess %>% \n        mutate(multiPROPDM = ifelse(PROPDMGEXP == 'B', 10^9, \n                                    ifelse(PROPDMGEXP == 'M', 10^6, \n                                           ifelse(PROPDMGEXP == 'K', 10^3, \n                                                  ifelse(PROPDMGEXP == 'H', 100, 1))))) %>%\n        mutate(totalPROPDMG = as.numeric(multiPROPDM) * as.numeric(PROPDMG)) -> dataTreated\n\n\n\n\n#FATALITIES INJURIES\n#PROPDMG PROPDMGEXP CROPDMG CROPDMGEXP",
    "created" : 1434371283864.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1044536737",
    "id" : "60AFF85C",
    "lastKnownWriteTime" : 1434449387,
    "path" : "D:/Privado/repos/5.ReproducibleResearch/PeerAssessment2/PA2Code.R",
    "project_path" : "PA2Code.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "source_on_save" : false,
    "type" : "r_source"
}
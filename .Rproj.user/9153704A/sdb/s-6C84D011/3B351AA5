{
    "contents" : "# Reproducible Research: Peer Assessment 1\nby jmvilaverde  \n\n\n## 1. Loading and preprocessing the data\n\n#### Code:\n\n```r\n##Load the data\n#Zip file is always present into project directory\ndataZipFile <- \"activity.zip\"\ndataFile <- \"activity.csv\"\n\n#Check if exists unzipped, else unzip it\nif(!file.exists(dataFile)) unzip(dataFile)\n\n#Read file\nbasedata <- read.csv(dataFile, sep = \",\")\n\n##Process data\n#Remove NAs\ndata <- basedata[!is.na(basedata$steps),]\n```\n\n***\n\n## 2. What is mean total number of steps taken per day?\n\n### Calculate total number of steps taken per day\n\n#### Code:\n\n\n```r\n#Use of dplyr library\nlibrary(dplyr)\n```\n\n```\n## \n## Attaching package: 'dplyr'\n## \n## The following object is masked from 'package:stats':\n## \n##     filter\n## \n## The following objects are masked from 'package:base':\n## \n##     intersect, setdiff, setequal, union\n```\n\n```r\n#Calculate Total Steps per day\n#Use dataset data without NAs\ndataStepsSum <- with(data, aggregate(steps, list(date), sum))\ndataStepsSum <- rename(dataStepsSum, date = Group.1, steps = x)\ndataStepsSum <- select(dataStepsSum, steps, date)\n```\n\n### Histogram of the total number of steps taken each day\n\n#### Code:\n\n\n```r\n#Generate graph\nhist(dataStepsSum$steps, breaks = nrow(dataStepsSum), main = \"Histrogram of Total number of Steps per Day\", xlab = \"Total Steps\")\n```\n\n![](PA1_template_files/figure-html/histTotalSteps-1.png) \n\n\n### Calculate and report the mean and median of the total number of steps taken per day\n\n#### Code:\n\n\n```r\n#Calculate mean and median rounded to 2 decimals\nmeanSteps <- round(mean(dataStepsSum$steps),2)\nmedianSteps <- round(median(dataStepsSum$steps),2)\n```\n\n> Values of mean and median for data without NAs\n> \n.      | values\n------ | -----------------------------\nmean   | 10766.19\nmedian | 10765\n\n***\n\n## 3. What is the average daily activity pattern?\n\n### Make a time series plot of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)\n\n#### Code:\n\n\n```r\n#Use ggplot2 library\nlibrary(ggplot2)\n\n#Calculate average number of steps per 5-minute interval\ndataIntervalAverage <- with(data, aggregate(steps, list(interval), mean))\ndataIntervalAverage <- rename(dataIntervalAverage, interval = Group.1, steps = x)\n\n#Make plot\nwith(dataIntervalAverage, qplot(x = interval, y = steps, geom = \"line\", main = \"Average of steps taken by 5-minute interval\", xlab = \"5-minute interval\", ylab = \"Average steps\"))\n```\n\n![](PA1_template_files/figure-html/averageDailyCalculateAndGraph-1.png) \n\n### Calculate 5-minute interval that contains the maximum number of steps on average across all the days.\n\n#### Code:\n\n\n```r\n#Calculate maximum number of steps interval\nmaxIntervalAverage <- dataIntervalAverage[dataIntervalAverage$steps == max(dataIntervalAverage$steps),]\n```\n\n> The maximum average interval of 5-minutes interval is 835 with an average of 206.17 steps.\n\n***\n\n## 4. Imputing missing values\n\n### Calculate and report the total number of missing values in the dataset\n\n#### Code:\n\n\n```r\n#Calculate total number of missing values\nnaRows <- nrow(basedata[is.na(basedata),])\n```\n\n> Total number of rows with missing values is 2304\n\n### Devise a strategy for filling in all of the missing values in the dataset. \n\n> As strategy for filling in all of the missin values I'm going to use the mean of steps for that 5-minute interval.\n\n\n### Create a new dataset that is equal to the original dataset but with the missing data filled in.\n\n#### Code:\n\n\n```r\n#Create a new dataset that is equal to the original dataset but with the missing data filled in.\n#Is used dataset basedata, this dataset is the original that contains NAs.\n#The NAs values are replaced with the mean of this interval contained in dataset dataIntervalAverage\n\nbasedata %>% \ninner_join(dataIntervalAverage, by = \"interval\") %>%\nmutate(steps = ifelse(is.na(steps.x), steps.y, steps.x)) %>%\nselect(steps, date, interval) -> dataTreated\n\n#Calculate Total Steps per day\ndataStepsSumTreated <- with(dataTreated, aggregate(steps, list(date), sum))\ndataStepsSumTreated <- rename(dataStepsSumTreated, date = Group.1, steps = x)\ndataStepsSumTreated <- select(dataStepsSumTreated, steps, date)\n```\n\n### Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps taken per day. \n\n#### Code:\n\n\n```r\n#Generate histogram\nhist(dataStepsSumTreated$steps, breaks = nrow(dataStepsSumTreated), main = \"Histrogram of Total Steps per Day with NAs filled - Frequency\", xlab = \"Total Steps\")\n```\n\n![](PA1_template_files/figure-html/imputingMissingValuesHist-1.png) \n\n#### Code:\n\n\n```r\n#Calculate mean and median rounded to 2 decimals\nmeanStepsTreated <- round(mean(dataStepsSumTreated$steps),2)\nmedianStepsTreated <- round(median(dataStepsSumTreated$steps),2)\n```\n\n> Comparative of mean and median for data with and without NAs\n> \nvalues | data with NA                  | data without NA                      | difference\n------ | ----------------------------- | ------------------------------------ | ------------------------------------------------\nmean   | 10766.19   | 10766.19   | 0\nmedian | 10765 | 10766.19 | -1.19000000000051\n\n#### Do these values differ from the estimates from the first part of the assignment? \n\n> Yes, it differ from the estimates.\n\n#### What is the impact of imputing missing data on the estimates of the total daily number of steps?\n\n> The mean remains the same, but the median is bigger without missing data.\n\n***\n\n## 5. Are there differences in activity patterns between weekdays and weekends?\n\n### Create a new factor variable in the dataset with two levels  weekday and weekend indicating whether a given date is a weekday or weekend day.\n\n#### Code:\n\n\n```r\nlibrary(lubridate)\n\ngetTypeOfDay <- function(x) {ifelse(x %in% c(7,1),\"Weekends\", \"Weekdays\")}\n\ndata %>%\n        mutate(wdays = wday(ymd(date))) %>% \n        mutate(typeOfDay = as.factor(getTypeOfDay(wdays))) %>%\n        select(steps, date, interval, typeOfDay) -> dataDays\n\ndataDaysAverage <- with(dataDays, aggregate(steps, list(interval, typeOfDay), mean))\ndataDaysAverage <- rename(dataDaysAverage, interval = Group.1, typeOfDay = Group.2, steps = x)\n```\n\n### Make a panel plot containing a time series plot of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all weekday days or weekend days (y-axis).\n\n#### Code:\n\n\n```r\ng <- ggplot(dataDaysAverage, aes(interval, steps)) \ng <- g + geom_line(col=\"blue\") + facet_wrap(~typeOfDay)\ng <- g + ggtitle(\"Comparative of activity patterns between weekdays and weekends\")\ng <- g + xlab(\"5-minute interval\") + ylab(\"Total steps\")\ng\n```\n\n![](PA1_template_files/figure-html/differencesHist-1.png) \n\n",
    "created" : 1434393411071.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3801870743",
    "id" : "3B351AA5",
    "lastKnownWriteTime" : 1434555949,
    "path" : "D:/Privado/repos/5.ReproducibleResearch/PeerAssessment1/PA1_template.md",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "markdown"
}